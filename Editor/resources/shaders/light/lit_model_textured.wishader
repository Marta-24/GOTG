{"vertex":"#version 330 core\n\n// Positions/Coordinates\nlayout (location = 0) in vec3 aPos;\n// Normals\nlayout (location = 1) in vec3 aNormal;\n// Texture Coordinates\nlayout (location = 2) in vec2 aTex;\n\nout vec3 Normal;\nout vec3 LocalPos;\nout vec2 TexCoord;\n\nuniform mat4 u_Model;\nuniform mat4 u_Proj;\nuniform mat4 u_View;\n\nvoid main()\n{\n\tgl_Position = u_Proj * u_View * u_Model * vec4(aPos, 1.0);\n\tTexCoord = aTex;\n\tNormal = aNormal;\n\tLocalPos = aPos;\n}\n","fragment":"#version 330 core\n\nout vec4 FragColor;\n\nin vec2 TexCoord;\nin vec3 Normal;\nin vec3 LocalPos;\n\nstruct DirectionalLight\n{\n    vec3 Color;\n    float AmbientIntensity;\n    float DiffuseIntensity;\n    vec3 Direction;\n};\n\nuniform vec4 u_MatAmbientColor;\nuniform vec4 u_MatDiffuseColor;\nuniform vec4 u_MatSpecularColor;\n\nuniform DirectionalLight u_DirectionalLight;\nuniform sampler2D u_Texture;\nuniform float u_SpecularValue;\nuniform vec3 u_CameraPosition;\n\nvoid main()\n{\n     vec4 ambientColor = vec4(u_DirectionalLight.Color, 1.0f) *\n                        u_DirectionalLight.AmbientIntensity *\n                        u_MatAmbientColor;\n\n    vec3 normal = normalize(Normal);\n\n    float diffuseFactor = dot(normal, -u_DirectionalLight.Direction);\n\n    vec4 diffuseColor = vec4(0, 0, 0, 0);\n    vec4 specularColor = vec4(0, 0, 0, 0);\n\n    if (diffuseFactor > 0) {\n        diffuseColor = vec4(u_DirectionalLight.Color, 1.0f) *\n                       u_DirectionalLight.DiffuseIntensity *\n                       u_MatDiffuseColor *\n                       diffuseFactor;\n\n        vec3 pixelToCamera = normalize(u_CameraPosition - LocalPos);\n        vec3 lightReflect = normalize(reflect(u_DirectionalLight.Direction, normal));\n\n        float specularFactor = dot(pixelToCamera, lightReflect);\n        if (specularFactor > 0) {\n            specularFactor = pow(specularFactor, u_SpecularValue);\n            specularColor = vec4(u_DirectionalLight.Color, 1.0f) *\n                            u_MatSpecularColor *\n                            specularFactor;\n        }\n    }\n\n    FragColor = texture2D(u_Texture, TexCoord.xy) *\n                (ambientColor + diffuseColor + specularColor);\n}","uniforms":{"u_Texture":11,"u_SpecularValue":3,"u_MatAmbientColor":6,"u_MatDiffuseColor":6,"u_MatSpecularColor":6}}